<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alien.mapper.SnailMessageMapper">

    <sql id="Message_Column_List">
    m.id, m.user_id, m.type, m.content, m.praise, m.create_by, m.update_by, m.create_date, m.update_date,
    m.del_flag
  </sql>
    <sql id="Reply_Column_List">
    r.id, r.message_id, r.user_id, r.content, r.praise, r.create_by, r.update_by, r.create_date, r.update_date,
    r.del_flag
  </sql>

  <resultMap id="MessageResultMap" type="com.alien.entity.SnailMessage">
    <id column="mid" jdbcType="INTEGER" property="id" />
    <result column="muser_id" jdbcType="INTEGER" property="userId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="mcontent" jdbcType="VARCHAR" property="content" />
    <result column="mpraise" jdbcType="BIGINT" property="praise" />
    <result column="mcreate_by" jdbcType="INTEGER" property="createBy" />
    <result column="mupdate_by" jdbcType="INTEGER" property="updateBy" />
    <result column="mcreate_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="mupdate_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="mdel_flag" jdbcType="BIT" property="delFlag" />
    <collection property="snailReplys" ofType="com.alien.entity.SnailReply" resultMap="ReplyResultMap" />
  </resultMap>
    <resultMap id="ReplyResultMap" type="com.alien.entity.SnailReply">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="message_id" jdbcType="INTEGER" property="messageId" />
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="content" jdbcType="VARCHAR" property="content" />
        <result column="praise" jdbcType="BIGINT" property="praise" />
        <result column="create_by" jdbcType="INTEGER" property="createBy" />
        <result column="update_by" jdbcType="INTEGER" property="updateBy" />
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
        <result column="del_flag" jdbcType="BIT" property="delFlag" />
    </resultMap>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />,
    <include refid="Base_Column_List" />
      from snail_message m
      left join snail_reply r on r.message_id = m.id
    where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insertMessage" parameterType="com.alien.entity.SnailMessage">
    insert into snail_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="praise != null">
        praise,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="praise != null">
        #{praise,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=BIT},
      </if>
    </trim>
  </insert>
    <insert id="insertReply" parameterType="com.alien.entity.SnailReply">
        insert into snail_reply
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="messageId != null">
                message_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="praise != null">
                praise,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="messageId != null">
                #{messageId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="praise != null">
                #{praise,jdbcType=BIGINT},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=INTEGER},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=BIT},
            </if>
        </trim>
    </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.alien.entity.SnailMessage">
    update snail_message
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="praise != null">
        praise = #{praise,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alien.model.SnailMessage">
    update snail_message
    set user_id = #{userId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      praise = #{praise,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=INTEGER},
      update_by = #{updateBy,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>