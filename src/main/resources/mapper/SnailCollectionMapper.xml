<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alien.mapper.SnailCollectionMapper">
  <resultMap id="BaseResultMap" type="com.alien.model.SnailCollection">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="room_id" jdbcType="INTEGER" property="roomId" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, room_id, create_by, update_by, create_date, update_date, del_flag
  </sql>
    <sql id="Room_Column_List">
        a.id AS "id",
        a.house_id AS "houseId",
        a.name AS "name",
        a.price AS "price",
        a.sale AS "sale",
        a.bedroom_img1 AS "bedroomImg1",
        a.bedroom_img2 AS "bedroomImg2",
        a.desp AS "desp",
        a.state AS "state",
        a.prasie AS "prasie",
        a.create_by AS "createBy",
        a.update_by AS "updateBy",
        a.create_date AS "createDate",
        a.update_date AS "updateDate",
        a.del_flag AS "delFlag"
  </sql>

    <select id="list" resultType="com.alien.entity.SnailRoom">
        select
        b.id AS "collectionId",
        <include refid="Room_Column_List"/>
        from snail_collection b
        LEFT JOIN snail_room a on b.room_id = a.id
        <where>
            a.del_flag = '0'
            <if test="userId != null">
                and b.user_id = #{userId}
            </if>
        </where>
    </select>

    <select id="count" resultType="java.lang.Integer">
        select
        count(0)
        from snail_collection
        <where>
            del_flag = '0'
            <if test="roomId != null">
                and room_id = #{roomId}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
        </where>
    </select>

  <insert id="insert" parameterType="com.alien.entity.SnailCollection">
    insert into snail_collection
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=BIT},
      </if>
    </trim>
  </insert>

  <update id="update" parameterType="com.alien.entity.SnailCollection">
    update snail_collection
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

    <update id="delete1">
		UPDATE snail_collection a SET
			 a.del_flag = '1'
		WHERE  a.id = #{id}
	</update>

    <delete id="delete">
        delete from snail_collection
		WHERE  id = #{id}
	</delete>


</mapper>