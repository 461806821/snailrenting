<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alien.mapper.SnailInformMapper">
  <resultMap id="BaseResultMap" type="com.alien.model.SnailInform">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="push_by" jdbcType="INTEGER" property="pushBy" />
    <result column="push_state" jdbcType="INTEGER" property="pushState" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, type, push_by, push_state, state, name, content, create_by, update_by, 
    create_date, update_date, del_flag
  </sql>

    <select id="list" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from snail_inform
        <where>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
        </where>
    </select>

  <select id="select" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from snail_inform
    where id = #{id,jdbcType=INTEGER}
  </select>

  <insert id="insert" parameterType="com.alien.entity.SnailInform">
    insert into snail_inform
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="pushBy != null">
        push_by,
      </if>
      <if test="pushState != null">
        push_state,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="pushBy != null">
        #{pushBy,jdbcType=INTEGER},
      </if>
      <if test="pushState != null">
        #{pushState,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=BIT},
      </if>
    </trim>
  </insert>

  <update id="update" parameterType="com.alien.entity.SnailInform">
    update snail_inform
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="pushBy != null">
        push_by = #{pushBy,jdbcType=INTEGER},
      </if>
      <if test="pushState != null">
        push_state = #{pushState,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

    <update id="delete">
		UPDATE snail_inform a SET
			 a.del_flag = '1'
		WHERE  a.id = #{id}
	</update>

    <update id="updatePushState">
		UPDATE snail_inform a SET
			 a.push_state = '1'
		WHERE  a.del_flag = '0'
		    and a.id = #{id}
	</update>

    <update id="updateState">
		UPDATE snail_inform a SET
			 a.state = '1'
		WHERE  a.del_flag = '0'
		    and a.id = #{id}
	</update>

</mapper>