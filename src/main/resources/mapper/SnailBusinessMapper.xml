<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alien.mapper.SnailBusinessMapper">

  <resultMap id="BaseResultMap" type="com.alien.entity.SnailBusiness">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="desp" jdbcType="VARCHAR" property="desp" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
  </resultMap>

  <sql id="Base_Column_List">
    id, user_id, type, desp, state, create_by, update_by, create_date, update_date, del_flag
  </sql>

    <select id="list" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM snail_business
        <where>
            del_flag = '0'
            <if test="userId != null and userId != ''">
                AND user_id = #{userId}
            </if>
            <if test="type != null and type != ''">
                AND type = #{type}
            </if>
            <if test="state != null and state != ''">
                AND password = #{state}
            </if>
        </where>
    </select>

    <select id="select" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM snail_business
        <where>
            del_flag = '0'
            <if test="userId != null and userId != ''">
                AND user_id = #{userId}
            </if>
            <if test="type != null and type != ''">
                AND type = #{type}
            </if>
            <if test="state != null and state != ''">
                AND password = #{state}
            </if>
        </where>
    </select>

  <insert id="insert" parameterType="com.alien.entity.SnailBusiness">
    insert into snail_business
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="desp != null">
        desp,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="desp != null">
        #{desp,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=BIT},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="com.alien.entity.SnailBusiness" resultType="java.lang.Long">
    select count(*) from snail_business
  </select>

  <update id="update" parameterType="com.alien.entity.SnailBusiness">
    update snail_business
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.desp != null">
        desp = #{record.desp,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=BIT},
      </if>
    </set>
  </update>

    <update id="delete" parameterType="com.alien.entity.SnailBusiness">
    update snail_business
    set del_flag ='1'
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>