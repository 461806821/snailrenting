<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alien.mapper.SnailBannerMapper">
  <resultMap id="BaseResultMap" type="com.alien.entity.SnailBanner">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="room_id" jdbcType="INTEGER" property="roomId" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, type, name, room_id, create_by, update_by, create_date, update_date, del_flag
  </sql>
    <sql id="Room_Column_List">
        a.id AS "id",
        a.house_id AS "houseId",
        a.name AS "name",
        a.price AS "price",
        a.sale AS "sale",
        a.bedroom_img1 AS "bedroomImg1",
        a.bedroom_img2 AS "bedroomImg2",
        a.desp AS "desp",
        a.state AS "state",
        a.praise AS "praise",
        a.create_by AS "createBy",
        a.update_by AS "updateBy",
        a.create_date AS "createDate",
        a.update_date AS "updateDate",
        a.del_flag AS "delFlag"
  </sql>

    <select id="getBannerHouses" resultType="com.alien.entity.SnailRoom">
        select
        b.type AS "bannerType",
        <include refid="Room_Column_List"/>
        from snail_banner b
        LEFT JOIN snail_room a on a.id = b.room_id
        where b.del_flag = '0' and a.del_flag = '0'
    </select>

    <select id="list" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from snail_banner
    <where> del_flag = '0'
        <if test="type != null and type != ''">
            and type = #{type}
        </if>
    </where>
    </select>

  <insert id="insert" parameterType="com.alien.entity.SnailBanner">
    insert into snail_banner
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=BIT},
      </if>
    </trim>
  </insert>

    <delete id="delete">
        delete from snail_banner
		WHERE  room_id = #{roomId}
	</delete>

</mapper>